import numpy as np
from scipy import interpolate


def smooth(x, y):
    func = interpolate.interp1d(x, y, kind='cubic')
    y_new = func(x)

    return x, y_new


def diff(x, y):
    diff_y = np.zeros_like(y)
    for i in range(1, len(x)-2):
        diff_y[i] = ((y[i+1]-y[i])+(y[i]-y[i-1]))/2

    return diff_y


if __name__ == '__main__':
    import matplotlib.pyplot as plt

    loss_list = [0.07911357283592224, 0.07931172847747803, 0.0792425349354744, 0.07885728776454926, 0.07882858067750931, 0.07923147827386856, 0.07919321209192276, 0.07900506258010864, 0.07927095890045166, 0.07908833026885986, 0.07925575971603394, 0.07886497676372528, 0.07926443219184875, 0.07927311211824417, 0.07867297530174255, 0.07948625832796097, 0.07951861619949341, 0.07849422842264175, 0.07880717515945435, 0.07900537550449371, 0.07836326956748962, 0.07883557677268982, 0.07851658761501312, 0.07944521307945251, 0.07925832271575928, 0.07891876995563507, 0.07889561355113983, 0.07894651591777802, 0.0781686007976532, 0.07896137237548828, 0.07785332202911377, 0.07863500714302063, 0.07852619886398315, 0.07837218791246414, 0.07827647775411606, 0.0783051922917366, 0.077802874147892, 0.07762888073921204, 0.0771348625421524, 0.07697875797748566, 0.07645347714424133, 0.07631981372833252, 0.07574011385440826, 0.07546253502368927, 0.07500135898590088, 0.0741267278790474, 0.07363169640302658, 0.07254049181938171, 0.07175132632255554, 0.06999551504850388, 0.06863027065992355, 0.06695747375488281, 0.06513368338346481, 0.06245571747422218, 0.05973032861948013, 0.056573286652565, 0.0531967356801033, 0.04900781065225601, 0.0446079820394516, 0.0395071841776371, 0.0344640389084816, 0.029055580496788025, 0.024122290313243866, 0.019699331372976303, 0.016335297375917435, 0.013711078092455864, 0.012206899002194405, 0.011439396999776363, 0.011661628261208534, 0.011647503823041916, 0.011500827968120575, 0.01191779039800167, 0.013675911352038383, 0.014952754601836205, 0.016108112409710884, 0.02738134376704693]

    losses = np.array(loss_list)
    t = np.arange(0, len(losses))
    plt.plot(t, losses)

    t, losses = smooth(t, losses)
    diffs = diff(t, losses)

    plt.plot(t, losses)
    plt.plot(t, 5*diffs)

    ax = plt.gca()
    ax.set_xticks(np.array([51, 54, 56, 60, 63, 64, 65]))
    ax.set_yticks(np.array([-0.0098, -0.0148, -0.019]))

    plt.grid()
    plt.show()


